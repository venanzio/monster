@article{CUV:2006,
  title       = {Recursive coalgebras from comonads},
  author      = {Venanzio Capretta and Tarmo Uustalu and Varmo Vene},
  journal     = {Information and Computation},
  volume      = 204,
  number      = 4,
  pages       = {437--468},
  month       = apr,
  year        = 2006
}

@article{AAMV:2003,
  author    = {Peter Aczel and
               Jir{\'{\i}} Ad{\'{a}}mek and
               Stefan Milius and
               Jiri Velebil},
  title     = {Infinite trees and completely iterative theories: a coalgebraic view},
  journal   = {Theor. Comput. Sci.},
  volume    = {300},
  number    = {1-3},
  pages     = {1--45},
  year      = {2003}
}


@manual{agda,
  author      = {The Agda Team},
  title       = {{Agda} User Manual},
  note        = {Release 2.6.2},
  url         = {https://agda.readthedocs.io/en/latest/index.html},
  year        = 2021
}

@article{mcbride/paterson:2008,
  author    = {Conor McBride and
               Ross Paterson},
  title     = {Applicative programming with effects},
  journal   = {J. Funct. Program.},
  volume    = {18},
  number    = {1},
  pages     = {1--13},
  year      = {2008},
  url       = {https://doi.org/10.1017/S0956796807006326},
  doi       = {10.1017/S0956796807006326},
  timestamp = {Fri, 02 Nov 2018 09:31:48 +0100},
  biburl    = {https://dblp.org/rec/journals/jfp/McbrideP08.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{staton:2009,
  author    = {Sam Staton},
  title     = {Relating Coalgebraic Notions of Bisimulation},
  booktitle = {CALCO},
  year      = {2009},
  pages     = {191-205},
  ee        = {http://dx.doi.org/10.1007/978-3-642-03741-2_14},
  crossref  = {calco2009},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@book{aczel:1988,
  author      = "Peter Aczel",
  title       = "Non-Well-Founded Sets",
  series      = "CSLI Lecture Notes",
  number      = 14,
  publisher   = "Stanford University",
  year        = 1988
}

@article{sangiorgi:2009,
  author    = {Davide Sangiorgi},
  title     = {On the origins of bisimulation and coinduction},
  journal   = {ACM Trans. Program. Lang. Syst.},
  volume    = {31},
  number    = {4},
  year      = {2009},
  ee        = {http://doi.acm.org/10.1145/1516507.1516510},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}


@book{milner:1980,
  author      = "Robin Milner",
  title       = "A Calculus of Communicating Systems",
  publisher   = "Springer-Verlag",
  series      = "Lecture Notes in Computer Science",
  volume      = 92,
  year        = 1980
}

@inproceedings{park:1981,
  author = {David Park},
  title  = {Concurrency and Automata on Infinite Sequences},
  booktitle = {Theoretical Computer Science},
  note = {Proceedings of the 5th GI-Conference Karlsruhe},
  editor = {P. Deussen},
  series = {LNCS},
  publisher = {Springer-Verlag},
  volume = 104,
  pages = {167-183},
  year = 1981
}

@article{capretta:2011,
  author  = {Venanzio Capretta},
  title   = {Coalgebras in functional programming and type theory},
  journal = {Theoretical Computer Science},
  volume  = {412},
  number  = {38},
  pages   = {5006--5024},
  year    = {2011},
  note    = {CMCS Tenth Anniversary Meeting},
  issn    = {0304-3975},
  doi     = {10.1016/j.tcs.2011.04.024},
  url     = {http://www.sciencedirect.com/science/article/pii/S0304397511003227}
}


@article{idempotent_monads,
title = {Idempotent monads and *-functors},
journal = "Journal of Pure and Applied Algebra",
volume = "215",
number = "2",
pages = "145 - 153",
year = "2011",
issn = "0022-4049",
doi = "https://doi.org/10.1016/j.jpaa.2010.04.005",
url = "http://www.sciencedirect.com/science/article/pii/S0022404910000794",
author = "John Clark and Robert Wisbauer"
}

@article{AAG:2005,
  author = 	 {Michael Abott and Thorsten Altenkirch and Neil Ghani},
  title = 	 {Containers - Constructing Strictly Positive Types},
  journal = 	 {Theoretical Computer Science},
  year = 	 {2005},
  volume =	 {342},
  pages =	 {3--27},
  month =	 {September},
  note =	 {Applied Semantics: Selected Topics},
}

@inproceedings{yampa_arcade, author = {Courtney, Antony and Nilsson, Henrik and Peterson, John}, title = {The Yampa Arcade}, year = {2003}, isbn = {1581137583}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = {https://doi.org/10.1145/871895.871897}, doi = {10.1145/871895.871897}, abstract = {Simulated worlds are a common (and highly lucrative) application domain that stretches from detailed simulation of physical systems to elaborate video game fantasies. We believe that Functional Reactive Programming (FRP) provides just the right level of functionality to develop simulated worlds in a concise, clear and modular way. We demonstrate the use of FRP in this domain by presenting an implementation of the classic "Space Invaders" game in Yampa, our most recent Haskell-embedded incarnation of FRP.}, booktitle = {Proceedings of the 2003 ACM SIGPLAN Workshop on Haskell}, pages = {7–18}, numpages = {12}, keywords = {hybrid modeling, FRP, modeling languages, functional programming, Haskell, synchronous dataflow languages}, location = {Uppsala, Sweden}, series = {Haskell '03} }



@inproceedings{capretta/fowler:2017,
  author    = {Venanzio Capretta and
               Jonathan Fowler},
  title     = {The Continuity of Monadic Stream Functions},
  crossref  = {lics2017},
  booktitle = {32nd Annual {ACM/IEEE} Symposium on Logic in Computer Science, {LICS} 2017, Reykjavik, Iceland, June 20-23, 2017},
  pages     = {1--12},
  year      = {2017},
  doi       = {10.1109/LICS.2017.8005119}
}


@proceedings{lics2017,
  title     = {32nd Annual {ACM/IEEE} Symposium on Logic in Computer Science, {LICS} 2017, Reykjavik, Iceland, June 20-23, 2017},
  publisher = {{IEEE} Computer Society},
  year      = {2017},
  url       = {http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=7999337},
  isbn      = {978-1-5090-3018-7}
}
 
@article{frp_refactored, author = {Perez, Ivan and B\"{a}renz, Manuel and Nilsson, Henrik}, title = {Functional Reactive Programming, Refactored}, year = {2016}, issue_date = {December 2016}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {51}, number = {12}, issn = {0362-1340}, url = {https://doi.org/10.1145/3241625.2976010}, doi = {10.1145/3241625.2976010}, abstract = { Functional Reactive Programming (FRP) has come to mean many things. Yet, scratch the surface of the multitude of realisations, and there is great commonality between them. This paper investigates this commonality, turning it into a mathematically coherent and practical FRP realisation that allows us to express the functionality of many existing FRP systems and beyond by providing a minimal FRP core parameterised on a monad. We give proofs for our theoretical claims and we have verified the practical side by benchmarking a set of existing, non-trivial Yampa applications running on top of our new system with very good results. }, journal = {SIGPLAN Not.}, month = sep, pages = {33–44}, numpages = {12}, keywords = {functional reactive programming, monadic streams, reactive program- ming, Haskell, stream programming} }

@article{msf_properties,
author = {Perez, Ivan and B\"{a}renz, Manuel and Nilsson, Henrik},
title = {On the Mathematical Properties of Monadic Stream Functions},
note = {\url{https://www.cs.nott.ac.uk/~psxip1/papers/msfmathprops.pdf} (Unpublished)},
year = {2016}
}

@inproceedings{essence_of_dataflow,
author = {Uustalu, Tarmo and Vene, Varmo},
year = {2005},
month = {11},
pages = {135-167},
title = {The Essence of Dataflow Programming},
isbn = {978-3-540-46843-1},
doi = {10.1007/11575467_2}
}

@misc{unsafe_io,
title = {Evaluation order and state tokens},
author = {Michael Snoyman},
year = {2014},
note = {\url{https://www.schoolofhaskell.com/user/snoyberg/general-haskell/advanced/evaluation-order-and-state-tokens}}
}

@misc{bearriver,
title = {bearriver: FRP Yampa replacement implemented with Monadic Stream Functions.},
author = {Ivan Perez and Manuel Bärenz},
note = {\url{https://hackage.haskell.org/package/bearriver}}
}

@misc {dunai,
title = {dunai: Generalised reactive framework supporting classic, arrowized and monadic FRP.},
author = {Ivan Perez and Manuel Bärenz},
note = {\url{https://hackage.haskell.org/package/dunai}}
}

@article{uustalu:2019,
  author    = {Shin{-}ya Katsumata and
               Exequiel Rivas and
               Tarmo Uustalu},
  title     = {Interaction laws of monads and comonads},
  journal   = {CoRR},
  volume    = {abs/1912.13477},
  year      = {2019},
  url       = {http://arxiv.org/abs/1912.13477},
  archivePrefix = {arXiv},
  eprint    = {1912.13477},
  timestamp = {Sat, 23 Jan 2021 01:20:19 +0100},
  biburl    = {https://dblp.org/rec/journals/corr/abs-1912-13477.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
a service of Schloss Dagstuhl - Leibniz Center for Informatics	homebrowsesearchabout

 
@article{quickcheck, author = {Claessen, Koen and Hughes, John}, title = {QuickCheck: A Lightweight Tool for Random Testing of Haskell Programs}, year = {2000}, issue_date = {Sept. 2000}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, volume = {35}, number = {9}, issn = {0362-1340}, url = {https://doi.org/10.1145/357766.351266}, doi = {10.1145/357766.351266}, abstract = {Quick Check is a tool which aids the Haskell programmer in formulating and testing properties of programs. Properties are described as Haskell functions, and can be automatically tested on random input, but it is also possible to define custom test data generators. We present a number of case studies, in which the tool was successfully used, and also point out some pitfalls to avoid. Random testing is especially suitable for functional programs because properties can be stated at a fine grain. When a function is built from separately tested components, then random testing suffices to obtain good coverage of the definition under test.}, journal = {SIGPLAN Not.}, month = sep, pages = {268–279}, numpages = {12} }

@misc{cellular_automata,
title = {Algorithmic Beauty: An Introduction to Cellular Automata},
author = {Evan Kozliner},
year = {2019},
note = {\url{https://towardsdatascience.com/algorithmic-beauty-an-introduction-to-cellular-automata-f53179b3cf8f}}
}

@misc{dan_piponi_CA,
author = {Dan Piponi},
title = {Evaluating cellular automata is comonadic},
year = {2006},
note = {\url{http://blog.sigfpe.com/2006/12/evaluating-cellular-automata-is.html}}
}

@article{huet_zipper, title={The Zipper}, volume={7}, DOI={10.1017/S0956796897002864}, number={5}, journal={Journal of Functional Programming}, publisher={Cambridge University Press}, author={HUET, GÉRARD}, year={1997}, pages={549–554}}

@book{jacobs:2016,
  author      = {Bart Jacobs},
  title       = {Introduction to Coalgebra : Towards Mathematics of States and Observation},
  publisher   = {Cambridge University Press},
  isbn        = {9781316823187},
  doi         = {https://doi.org/10.1017/CBO9781316823187},
  month       = {Dec},
  year        = {2016}
}
%%%%%%%%%%%%%%%%%%%
%   Collections   %
%%%%%%%%%%%%%%%%%%%



@proceedings{calco2009,
  editor    = {Alexander Kurz and
               Marina Lenisa and
               Andrzej Tarlecki},
  title     = {Algebra and Coalgebra in Computer Science, Third International
               Conference, CALCO 2009, Udine, Italy, September 7-10, 2009.
               Proceedings},
  booktitle = {CALCO 2009},
  publisher = {Springer},
  series    = {Lecture Notes in Computer Science},
  volume    = {5728},
  year      = {2009},
  isbn      = {978-3-642-03740-5},
  ee        = {http://dx.doi.org/10.1007/978-3-642-03741-2},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
