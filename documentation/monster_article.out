\BOOKMARK [1][-]{section.1}{Introduction}{}% 1
\BOOKMARK [1][-]{section.2}{Monadic Streams}{}% 2
\BOOKMARK [1][-]{section.3}{The Coinduction Principle}{}% 3
\BOOKMARK [1][-]{section.4}{Examples}{}% 4
\BOOKMARK [2][-]{subsection.4.1}{Identity monad}{section.4}% 5
\BOOKMARK [2][-]{subsection.4.2}{Maybe monad}{section.4}% 6
\BOOKMARK [2][-]{subsection.4.3}{List monad}{section.4}% 7
\BOOKMARK [2][-]{subsection.4.4}{Reader monad}{section.4}% 8
\BOOKMARK [2][-]{subsection.4.5}{State monad}{section.4}% 9
\BOOKMARK [2][-]{subsection.4.6}{IO monad}{section.4}% 10
\BOOKMARK [2][-]{subsection.4.7}{Store comonad}{section.4}% 11
\BOOKMARK [1][-]{section.5}{General functions and operations}{}% 12
\BOOKMARK [1][-]{section.6}{Instances of Functor, Applicative, Comonad}{}% 13
\BOOKMARK [2][-]{subsection.6.1}{Functor Instance}{section.6}% 14
\BOOKMARK [2][-]{subsection.6.2}{Applicative instance}{section.6}% 15
\BOOKMARK [2][-]{subsection.6.3}{Comonad instance in Haskell}{section.6}% 16
\BOOKMARK [3][-]{subsubsection.6.3.1}{Comonad law proof sketches}{subsection.6.3}% 17
\BOOKMARK [2][-]{subsection.6.4}{Monad Counter-examples}{section.6}% 18
\BOOKMARK [3][-]{subsubsection.6.4.1}{Case 1}{subsection.6.4}% 19
\BOOKMARK [3][-]{subsubsection.6.4.2}{Case 2}{subsection.6.4}% 20
\BOOKMARK [3][-]{subsubsection.6.4.3}{Case 3}{subsection.6.4}% 21
\BOOKMARK [1][-]{section.7}{Related work and applications}{}% 22
\BOOKMARK [2][-]{subsection.7.1}{FRP application}{section.7}% 23
\BOOKMARK [2][-]{subsection.7.2}{Relation to Dunai}{section.7}% 24
\BOOKMARK [2][-]{subsection.7.3}{Dataflow programming}{section.7}% 25
\BOOKMARK [2][-]{subsection.7.4}{Properties of monadic streams}{section.7}% 26
\BOOKMARK [1][-]{section.8}{Conclusions}{}% 27
